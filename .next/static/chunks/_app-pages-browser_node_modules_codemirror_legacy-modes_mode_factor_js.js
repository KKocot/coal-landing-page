"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_codemirror_legacy-modes_mode_factor_js"],{

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/factor.js":
/*!**************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/factor.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   factor: () => (/* binding */ factor)\n/* harmony export */ });\n/* harmony import */ var _simple_mode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simple-mode.js */ \"(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js\");\n\n\nconst factor = (0,_simple_mode_js__WEBPACK_IMPORTED_MODULE_0__.simpleMode)({\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    languageData: {\n      name: \"factor\",\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      commentTokens: {line: \"!\"}\n    }\n  });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9mYWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7O0FBRXBDLGVBQWUsMkRBQVU7QUFDaEM7QUFDQTtBQUNBLE9BQU8saUNBQWlDO0FBQ3hDO0FBQ0EsT0FBTywrQ0FBK0M7QUFDdEQsT0FBTyxrRUFBa0U7QUFDekUsT0FBTyxnREFBZ0Q7QUFDdkQ7QUFDQSxPQUFPLDBGQUEwRjtBQUNqRyxTQUFTLGdCQUFnQjtBQUN6QjtBQUNBLE9BQU8saUhBQWlIO0FBQ3hIO0FBQ0EsT0FBTyxpRkFBaUY7QUFDeEY7QUFDQSxPQUFPLHVEQUF1RDtBQUM5RDtBQUNBLE9BQU8seUVBQXlFO0FBQ2hGO0FBQ0EsT0FBTyxvRUFBb0U7QUFDM0UsNkJBQTZCLGNBQWM7QUFDM0MsT0FBTyxZQUFZLGtFQUFrRSxHQUFHLDZCQUE2QjtBQUNySDtBQUNBLE9BQU8sbURBQW1EO0FBQzFELE9BQU8sOENBQThDO0FBQ3JEO0FBQ0EsT0FBTyxzREFBc0Q7QUFDN0Q7QUFDQSxPQUFPLGdDQUFnQztBQUN2QyxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sU0FBUyxtQ0FBbUM7QUFDbkQsT0FBTywyQkFBMkI7QUFDbEMsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPLDBEQUEwRDtBQUNqRSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sVUFBVSxtQ0FBbUM7QUFDcEQsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPLDREQUE0RDtBQUNuRSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sNkNBQTZDO0FBQ3BELE9BQU8sOEJBQThCO0FBQ3JDLE9BQU8sNEJBQTRCO0FBQ25DLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLEdBQUciLCJzb3VyY2VzIjpbIi9Vc2Vycy9rcnp5c3p0b2Zrb2NvdC9EZXNrdG9wL2xhbmRpbmctcGFnZS9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvZmFjdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c2ltcGxlTW9kZX0gZnJvbSBcIi4vc2ltcGxlLW1vZGUuanNcIlxuXG5leHBvcnQgY29uc3QgZmFjdG9yID0gc2ltcGxlTW9kZSh7XG4gICAgc3RhcnQ6IFtcbiAgICAgIC8vIGNvbW1lbnRzXG4gICAgICB7cmVnZXg6IC8jPyEuKi8sIHRva2VuOiBcImNvbW1lbnRcIn0sXG4gICAgICAvLyBzdHJpbmdzIFwiXCJcIiwgbXVsdGlsaW5lIC0tPiBzdGF0ZVxuICAgICAge3JlZ2V4OiAvXCJcIlwiLywgdG9rZW46IFwic3RyaW5nXCIsIG5leHQ6IFwic3RyaW5nM1wifSxcbiAgICAgIHtyZWdleDogLyhTVFJJTkc6KShcXHMpLywgdG9rZW46IFtcImtleXdvcmRcIiwgbnVsbF0sIG5leHQ6IFwic3RyaW5nMlwifSxcbiAgICAgIHtyZWdleDogL1xcUyo/XCIvLCB0b2tlbjogXCJzdHJpbmdcIiwgbmV4dDogXCJzdHJpbmdcIn0sXG4gICAgICAvLyBudW1iZXJzOiBkZWMsIGhleCwgdW5pY29kZSwgYmluLCBmcmFjdGlvbmFsLCBjb21wbGV4XG4gICAgICB7cmVnZXg6IC8oPzoweFtcXGQsYS1mXSspfCg/OjBvWzAtN10rKXwoPzowYlswLDFdKyl8KD86XFwtP1xcZCsuP1xcZCopKD89XFxzKS8sIHRva2VuOiBcIm51bWJlclwifSxcbiAgICAgIC8ve3JlZ2V4OiAvWystXT8vfSAvL2ZyYWN0aW9uYWxcbiAgICAgIC8vIGRlZmluaXRpb246IGRlZmluaW5nIHdvcmQsIGRlZmluZWQgd29yZCwgZXRjXG4gICAgICB7cmVnZXg6IC8oKD86R0VORVJJQyl8XFw6P1xcOikoXFxzKykoXFxTKykoXFxzKykoXFwoKS8sIHRva2VuOiBbXCJrZXl3b3JkXCIsIG51bGwsIFwiZGVmXCIsIG51bGwsIFwiYnJhY2tldFwiXSwgbmV4dDogXCJzdGFja1wifSxcbiAgICAgIC8vIG1ldGhvZCBkZWZpbml0aW9uOiBkZWZpbmluZyB3b3JkLCB0eXBlLCBkZWZpbmVkIHdvcmQsIGV0Y1xuICAgICAge3JlZ2V4OiAvKE1cXDopKFxccyspKFxcUyspKFxccyspKFxcUyspLywgdG9rZW46IFtcImtleXdvcmRcIiwgbnVsbCwgXCJkZWZcIiwgbnVsbCwgXCJ0YWdcIl19LFxuICAgICAgLy8gdm9jYWJ1bGFyeSB1c2luZyAtLT4gc3RhdGVcbiAgICAgIHtyZWdleDogL1VTSU5HXFw6LywgdG9rZW46IFwia2V5d29yZFwiLCBuZXh0OiBcInZvY2FidWxhcnlcIn0sXG4gICAgICAvLyB2b2NhYnVsYXJ5IGRlZmluaXRpb24vdXNlXG4gICAgICB7cmVnZXg6IC8oVVNFXFw6fElOXFw6KShcXHMrKShcXFMrKSg/PVxcc3wkKS8sIHRva2VuOiBbXCJrZXl3b3JkXCIsIG51bGwsIFwidGFnXCJdfSxcbiAgICAgIC8vIGRlZmluaXRpb246IGEgZGVmaW5pbmcgd29yZCwgZGVmaW5lZCB3b3JkXG4gICAgICB7cmVnZXg6IC8oXFxTK1xcOikoXFxzKykoXFxTKykoPz1cXHN8JCkvLCB0b2tlbjogW1wia2V5d29yZFwiLCBudWxsLCBcImRlZlwiXX0sXG4gICAgICAvLyBcImtleXdvcmRzXCIsIGluY2wuIDsgdCBmIC4gWyBdIHsgfSBkZWZpbmluZyB3b3Jkc1xuICAgICAge3JlZ2V4OiAvKD86O3xcXFxcfHR8ZnxpZnxsb29wfHdoaWxlfHVudGlsfGRvfFBSSVZBVEU+fDxQUklWQVRFfFxcLnxcXFMqXFxbfFxcXXxcXFMqXFx7fFxcfSkoPz1cXHN8JCkvLCB0b2tlbjogXCJrZXl3b3JkXCJ9LFxuICAgICAgLy8gPGNvbnN0cnVjdG9ycz4gYW5kIHRoZSBsaWtlXG4gICAgICB7cmVnZXg6IC9cXFMrW1xcKT5cXC5cXCpcXD9dKyg/PVxcc3wkKS8sIHRva2VuOiBcImJ1aWx0aW5cIn0sXG4gICAgICB7cmVnZXg6IC9bXFwpPjxdK1xcUysoPz1cXHN8JCkvLCB0b2tlbjogXCJidWlsdGluXCJ9LFxuICAgICAgLy8gb3BlcmF0b3JzXG4gICAgICB7cmVnZXg6IC8oPzpbXFwrXFwtXFw9XFwvXFwqPD5dKSg/PVxcc3wkKS8sIHRva2VuOiBcImtleXdvcmRcIn0sXG4gICAgICAvLyBhbnkgaWQgKD8pXG4gICAgICB7cmVnZXg6IC9cXFMrLywgdG9rZW46IFwidmFyaWFibGVcIn0sXG4gICAgICB7cmVnZXg6IC9cXHMrfC4vLCB0b2tlbjogbnVsbH1cbiAgICBdLFxuICAgIHZvY2FidWxhcnk6IFtcbiAgICAgIHtyZWdleDogLzsvLCB0b2tlbjogXCJrZXl3b3JkXCIsIG5leHQ6IFwic3RhcnRcIn0sXG4gICAgICB7cmVnZXg6IC9cXFMrLywgdG9rZW46IFwidGFnXCJ9LFxuICAgICAge3JlZ2V4OiAvXFxzK3wuLywgdG9rZW46IG51bGx9XG4gICAgXSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtyZWdleDogLyg/OlteXFxcXF18XFxcXC4pKj9cIi8sIHRva2VuOiBcInN0cmluZ1wiLCBuZXh0OiBcInN0YXJ0XCJ9LFxuICAgICAge3JlZ2V4OiAvLiovLCB0b2tlbjogXCJzdHJpbmdcIn1cbiAgICBdLFxuICAgIHN0cmluZzI6IFtcbiAgICAgIHtyZWdleDogL147LywgdG9rZW46IFwia2V5d29yZFwiLCBuZXh0OiBcInN0YXJ0XCJ9LFxuICAgICAge3JlZ2V4OiAvLiovLCB0b2tlbjogXCJzdHJpbmdcIn1cbiAgICBdLFxuICAgIHN0cmluZzM6IFtcbiAgICAgIHtyZWdleDogLyg/OlteXFxcXF18XFxcXC4pKj9cIlwiXCIvLCB0b2tlbjogXCJzdHJpbmdcIiwgbmV4dDogXCJzdGFydFwifSxcbiAgICAgIHtyZWdleDogLy4qLywgdG9rZW46IFwic3RyaW5nXCJ9XG4gICAgXSxcbiAgICBzdGFjazogW1xuICAgICAge3JlZ2V4OiAvXFwpLywgdG9rZW46IFwiYnJhY2tldFwiLCBuZXh0OiBcInN0YXJ0XCJ9LFxuICAgICAge3JlZ2V4OiAvLS0vLCB0b2tlbjogXCJicmFja2V0XCJ9LFxuICAgICAge3JlZ2V4OiAvXFxTKy8sIHRva2VuOiBcIm1ldGFcIn0sXG4gICAgICB7cmVnZXg6IC9cXHMrfC4vLCB0b2tlbjogbnVsbH1cbiAgICBdLFxuICAgIGxhbmd1YWdlRGF0YToge1xuICAgICAgbmFtZTogXCJmYWN0b3JcIixcbiAgICAgIGRvbnRJbmRlbnRTdGF0ZXM6IFtcInN0YXJ0XCIsIFwidm9jYWJ1bGFyeVwiLCBcInN0cmluZ1wiLCBcInN0cmluZzNcIiwgXCJzdGFja1wiXSxcbiAgICAgIGNvbW1lbnRUb2tlbnM6IHtsaW5lOiBcIiFcIn1cbiAgICB9XG4gIH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/factor.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/simple-mode.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simpleMode: () => (/* binding */ simpleMode)\n/* harmony export */ });\nfunction simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    mergeTokens: meta.mergeTokens,\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9zaW1wbGUtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLGtCQUFrQixrQ0FBa0M7QUFDcEQ7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxLQUFLO0FBQ0w7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG9CQUFvQjtBQUM5QztBQUNBLGtDQUFrQywyQ0FBMkM7QUFDN0U7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCO0FBQ2pCLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rcnp5c3p0b2Zrb2NvdC9EZXNrdG9wL2xhbmRpbmctcGFnZS9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvc2ltcGxlLW1vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNpbXBsZU1vZGUoc3RhdGVzKSB7XG4gIGVuc3VyZVN0YXRlKHN0YXRlcywgXCJzdGFydFwiKTtcbiAgdmFyIHN0YXRlc18gPSB7fSwgbWV0YSA9IHN0YXRlcy5sYW5ndWFnZURhdGEgfHwge30sIGhhc0luZGVudGF0aW9uID0gZmFsc2U7XG4gIGZvciAodmFyIHN0YXRlIGluIHN0YXRlcykgaWYgKHN0YXRlICE9IG1ldGEgJiYgc3RhdGVzLmhhc093blByb3BlcnR5KHN0YXRlKSkge1xuICAgIHZhciBsaXN0ID0gc3RhdGVzX1tzdGF0ZV0gPSBbXSwgb3JpZyA9IHN0YXRlc1tzdGF0ZV07XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcmlnLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGF0YSA9IG9yaWdbaV07XG4gICAgICBsaXN0LnB1c2gobmV3IFJ1bGUoZGF0YSwgc3RhdGVzKSk7XG4gICAgICBpZiAoZGF0YS5pbmRlbnQgfHwgZGF0YS5kZWRlbnQpIGhhc0luZGVudGF0aW9uID0gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBtZXRhLm5hbWUsXG4gICAgc3RhcnRTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4ge3N0YXRlOiBcInN0YXJ0XCIsIHBlbmRpbmc6IG51bGwsIGluZGVudDogaGFzSW5kZW50YXRpb24gPyBbXSA6IG51bGx9O1xuICAgIH0sXG4gICAgY29weVN0YXRlOiBmdW5jdGlvbihzdGF0ZSkge1xuICAgICAgdmFyIHMgPSB7c3RhdGU6IHN0YXRlLnN0YXRlLCBwZW5kaW5nOiBzdGF0ZS5wZW5kaW5nLCBpbmRlbnQ6IHN0YXRlLmluZGVudCAmJiBzdGF0ZS5pbmRlbnQuc2xpY2UoMCl9O1xuICAgICAgaWYgKHN0YXRlLnN0YWNrKVxuICAgICAgICBzLnN0YWNrID0gc3RhdGUuc3RhY2suc2xpY2UoMCk7XG4gICAgICByZXR1cm4gcztcbiAgICB9LFxuICAgIHRva2VuOiB0b2tlbkZ1bmN0aW9uKHN0YXRlc18pLFxuICAgIGluZGVudDogaW5kZW50RnVuY3Rpb24oc3RhdGVzXywgbWV0YSksXG4gICAgbWVyZ2VUb2tlbnM6IG1ldGEubWVyZ2VUb2tlbnMsXG4gICAgbGFuZ3VhZ2VEYXRhOiBtZXRhXG4gIH1cbn07XG5cbmZ1bmN0aW9uIGVuc3VyZVN0YXRlKHN0YXRlcywgbmFtZSkge1xuICBpZiAoIXN0YXRlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmRlZmluZWQgc3RhdGUgXCIgKyBuYW1lICsgXCIgaW4gc2ltcGxlIG1vZGVcIik7XG59XG5cbmZ1bmN0aW9uIHRvUmVnZXgodmFsLCBjYXJldCkge1xuICBpZiAoIXZhbCkgcmV0dXJuIC8oPzopLztcbiAgdmFyIGZsYWdzID0gXCJcIjtcbiAgaWYgKHZhbCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIGlmICh2YWwuaWdub3JlQ2FzZSkgZmxhZ3MgPSBcImlcIjtcbiAgICB2YWwgPSB2YWwuc291cmNlO1xuICB9IGVsc2Uge1xuICAgIHZhbCA9IFN0cmluZyh2YWwpO1xuICB9XG4gIHJldHVybiBuZXcgUmVnRXhwKChjYXJldCA9PT0gZmFsc2UgPyBcIlwiIDogXCJeXCIpICsgXCIoPzpcIiArIHZhbCArIFwiKVwiLCBmbGFncyk7XG59XG5cbmZ1bmN0aW9uIGFzVG9rZW4odmFsKSB7XG4gIGlmICghdmFsKSByZXR1cm4gbnVsbDtcbiAgaWYgKHZhbC5hcHBseSkgcmV0dXJuIHZhbFxuICBpZiAodHlwZW9mIHZhbCA9PSBcInN0cmluZ1wiKSByZXR1cm4gdmFsLnJlcGxhY2UoL1xcLi9nLCBcIiBcIik7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWwubGVuZ3RoOyBpKyspXG4gICAgcmVzdWx0LnB1c2godmFsW2ldICYmIHZhbFtpXS5yZXBsYWNlKC9cXC4vZywgXCIgXCIpKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gUnVsZShkYXRhLCBzdGF0ZXMpIHtcbiAgaWYgKGRhdGEubmV4dCB8fCBkYXRhLnB1c2gpIGVuc3VyZVN0YXRlKHN0YXRlcywgZGF0YS5uZXh0IHx8IGRhdGEucHVzaCk7XG4gIHRoaXMucmVnZXggPSB0b1JlZ2V4KGRhdGEucmVnZXgpO1xuICB0aGlzLnRva2VuID0gYXNUb2tlbihkYXRhLnRva2VuKTtcbiAgdGhpcy5kYXRhID0gZGF0YTtcbn1cblxuZnVuY3Rpb24gdG9rZW5GdW5jdGlvbihzdGF0ZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSwgc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUucGVuZGluZykge1xuICAgICAgdmFyIHBlbmQgPSBzdGF0ZS5wZW5kaW5nLnNoaWZ0KCk7XG4gICAgICBpZiAoc3RhdGUucGVuZGluZy5sZW5ndGggPT0gMCkgc3RhdGUucGVuZGluZyA9IG51bGw7XG4gICAgICBzdHJlYW0ucG9zICs9IHBlbmQudGV4dC5sZW5ndGg7XG4gICAgICByZXR1cm4gcGVuZC50b2tlbjtcbiAgICB9XG5cbiAgICB2YXIgY3VyU3RhdGUgPSBzdGF0ZXNbc3RhdGUuc3RhdGVdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3VyU3RhdGUubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBydWxlID0gY3VyU3RhdGVbaV07XG4gICAgICB2YXIgbWF0Y2hlcyA9ICghcnVsZS5kYXRhLnNvbCB8fCBzdHJlYW0uc29sKCkpICYmIHN0cmVhbS5tYXRjaChydWxlLnJlZ2V4KTtcbiAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgIGlmIChydWxlLmRhdGEubmV4dCkge1xuICAgICAgICAgIHN0YXRlLnN0YXRlID0gcnVsZS5kYXRhLm5leHQ7XG4gICAgICAgIH0gZWxzZSBpZiAocnVsZS5kYXRhLnB1c2gpIHtcbiAgICAgICAgICAoc3RhdGUuc3RhY2sgfHwgKHN0YXRlLnN0YWNrID0gW10pKS5wdXNoKHN0YXRlLnN0YXRlKTtcbiAgICAgICAgICBzdGF0ZS5zdGF0ZSA9IHJ1bGUuZGF0YS5wdXNoO1xuICAgICAgICB9IGVsc2UgaWYgKHJ1bGUuZGF0YS5wb3AgJiYgc3RhdGUuc3RhY2sgJiYgc3RhdGUuc3RhY2subGVuZ3RoKSB7XG4gICAgICAgICAgc3RhdGUuc3RhdGUgPSBzdGF0ZS5zdGFjay5wb3AoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChydWxlLmRhdGEuaW5kZW50KVxuICAgICAgICAgIHN0YXRlLmluZGVudC5wdXNoKHN0cmVhbS5pbmRlbnRhdGlvbigpICsgc3RyZWFtLmluZGVudFVuaXQpO1xuICAgICAgICBpZiAocnVsZS5kYXRhLmRlZGVudClcbiAgICAgICAgICBzdGF0ZS5pbmRlbnQucG9wKCk7XG4gICAgICAgIHZhciB0b2tlbiA9IHJ1bGUudG9rZW5cbiAgICAgICAgaWYgKHRva2VuICYmIHRva2VuLmFwcGx5KSB0b2tlbiA9IHRva2VuKG1hdGNoZXMpXG4gICAgICAgIGlmIChtYXRjaGVzLmxlbmd0aCA+IDIgJiYgcnVsZS50b2tlbiAmJiB0eXBlb2YgcnVsZS50b2tlbiAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgc3RhdGUucGVuZGluZyA9IFtdO1xuICAgICAgICAgIGZvciAodmFyIGogPSAyOyBqIDwgbWF0Y2hlcy5sZW5ndGg7IGorKylcbiAgICAgICAgICAgIGlmIChtYXRjaGVzW2pdKVxuICAgICAgICAgICAgICBzdGF0ZS5wZW5kaW5nLnB1c2goe3RleHQ6IG1hdGNoZXNbal0sIHRva2VuOiBydWxlLnRva2VuW2ogLSAxXX0pO1xuICAgICAgICAgIHN0cmVhbS5iYWNrVXAobWF0Y2hlc1swXS5sZW5ndGggLSAobWF0Y2hlc1sxXSA/IG1hdGNoZXNbMV0ubGVuZ3RoIDogMCkpO1xuICAgICAgICAgIHJldHVybiB0b2tlblswXTtcbiAgICAgICAgfSBlbHNlIGlmICh0b2tlbiAmJiB0b2tlbi5qb2luKSB7XG4gICAgICAgICAgcmV0dXJuIHRva2VuWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0b2tlbjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBzdHJlYW0ubmV4dCgpO1xuICAgIHJldHVybiBudWxsO1xuICB9O1xufVxuXG5mdW5jdGlvbiBpbmRlbnRGdW5jdGlvbihzdGF0ZXMsIG1ldGEpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0YXRlLCB0ZXh0QWZ0ZXIpIHtcbiAgICBpZiAoc3RhdGUuaW5kZW50ID09IG51bGwgfHwgbWV0YS5kb250SW5kZW50U3RhdGVzICYmIG1ldGEuZG9udEluZGVudFN0YXRlcy5pbmRleE9mKHN0YXRlLnN0YXRlKSA+IC0xKVxuICAgICAgcmV0dXJuIG51bGxcblxuICAgIHZhciBwb3MgPSBzdGF0ZS5pbmRlbnQubGVuZ3RoIC0gMSwgcnVsZXMgPSBzdGF0ZXNbc3RhdGUuc3RhdGVdO1xuICAgIHNjYW46IGZvciAoOzspIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcbiAgICAgICAgaWYgKHJ1bGUuZGF0YS5kZWRlbnQgJiYgcnVsZS5kYXRhLmRlZGVudElmTGluZVN0YXJ0ICE9PSBmYWxzZSkge1xuICAgICAgICAgIHZhciBtID0gcnVsZS5yZWdleC5leGVjKHRleHRBZnRlcik7XG4gICAgICAgICAgaWYgKG0gJiYgbVswXSkge1xuICAgICAgICAgICAgcG9zLS07XG4gICAgICAgICAgICBpZiAocnVsZS5uZXh0IHx8IHJ1bGUucHVzaCkgcnVsZXMgPSBzdGF0ZXNbcnVsZS5uZXh0IHx8IHJ1bGUucHVzaF07XG4gICAgICAgICAgICB0ZXh0QWZ0ZXIgPSB0ZXh0QWZ0ZXIuc2xpY2UobVswXS5sZW5ndGgpO1xuICAgICAgICAgICAgY29udGludWUgc2NhbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcG9zIDwgMCA/IDAgOiBzdGF0ZS5pbmRlbnRbcG9zXTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js\n"));

/***/ })

}]);